services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    env_file:
      - ./backend/.env    
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  backend:
    build: 
      context: ./backend
      dockerfile: ./Dockerfile.dev
    container_name: nest-backend
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "8080:8080"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/prisma:/app/prisma   
      - ./backend/generated:/app/generated
      - ./backend/src:/app/src  
      - /app/node_modules   
    depends_on:
      - postgres
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./backend/uploads:/uploads:ro
    depends_on:
      - backend
    develop:
      watch:
        - action: restart
          path: ./nginx/default.conf
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
